//Webpack sirve para preparar todos los elementos para un entorno de desarrollo local o produccion

* npm install webpack webpack-cli -D

* npx webpack /Para compilar un codigo JavaScript y prepara el proyecto
* npx webpack --mode development /Para compilar en modo de desarrollo
* npx webpack --mode production /Para compilar en modo produccion
* npx webpack --mode production --config /Para compilar en modo produccion con un archivo especifico de config
* Se puede agregar el comando webpack --mode... a Scripts para utilizarlo con * npm run 'script'

// Configurar Webpack

* Archivo webpack.config.json

* Configuracion del package.json para trabajar con Scripts

"build": "webpack --mode production --config webpack.config.js",
"dev": "webpack --config webpack.config.dev.js",
"watchdev" : "webpack --watch --config webpack.config.dev.js",
"watchbuild" : "webpack --watch --config webpack.config.js"

/*-----Instalacion de un plugin para limpiar el entorno de produccion desdpues de un build-----*/

$ npm install clean-webpack-plugin -D

/*-----------Babel hace que el proyecto sea compatible con todos los navegadores---------------*/

* npm install babel-loader @babel/core @babel/preset-env @babel/plugin-transform-runtime -D //Dependencia Dev
    @babel/preset-env - Para trabajar con JavaScript moderno
    @babel/plugin-transform-runtime - Para trabajar con Asyncronismo JavaScript

/*-----------------------------------Archivo configuracion babel-------------------------------*/

{
    "presets": [
        "@babel/preset-env"
    ],
    "plugins": [
        "@babel/plugin-transform-runtime"
    ]
}

/*-----------------Se instala el Loader para Webpack con css-plugin y html-plugin----------------*/

* npm install html-webpack-plugin -D
* npm install mini-css-extract-plugin css-loader -D

Se debe eliminar el link a styles para que lo agrege Webpack
Se debe modificar el template en caso de mover las imagenes de carpeta a la carpeta dist


/*----------------------Para el manejo de variables de entorno (Info Sensible)-----------------*/

npm install dotenv-webpack -D

Se crea el archivo .env donde estaran las variables de entorno
Se crea el archivo .env-example para mostrar un ejemplo de que variables existen

/*----------------------instalacion Plugin para mover archivos a dist--------------------------*/

npm install copy-webpack-plugin -D

/*-------Optimizacion de codigo para Produccion (Optimiza CSS y JavaScript) -------------------*/

npm install css-minimizer-webpack-plugin terser-webpack-plugin -D

/*-----------------------------------Archivo configuracion Webpack-------------------------------*/

const path = require("path");
const HtmlWebpackPlugin = require("html-webpack-plugin");
const MiniCssExtractPlugin = require("mini-css-extract-plugin");
const CopyPlugin = require("copy-webpack-plugin");

module.exports = {
    entry: "./src/index.js",
    output: {
        path: path.resolve(__dirname, "dist"),
        filename: "main.js",
    },
    resolve: {
        extensions: [".js"], //Aqui se debe agregar React o alguna otra extension utilizada
    },
    module: {
        rules: [
            //Se agrega babel para ser utilizado con Webpack
            {
                test: /\.m?js$/,
                exclude: /node_modules/,
                use: {
                    loader: "babel-loader",
                },
            },
            {
                test: /\.css|.styl$/i,
                use: [
                    MiniCssExtractPlugin.loader,
                    "css-loader",
                    "stylus-loader",
                ],
            },
            {
                test: /\.png/,
                type: "asset/resource",
            },
        ],
    },
    plugins: [
        new HtmlWebpackPlugin({
            inject: true,
            template: "./public/index.html",
            filename: "./index.html",
        }),
        new MiniCssExtractPlugin(),
        new CopyPlugin({
            patterns: [
                {
                    from: path.resolve(__dirname, "src", "assets/images"),
                    to: "assets/images",
                },
            ],
        }),
    ],
};

/*----------------------Para optimizar las imagenes con Webpack--------------------------------*/

Se agrega la regla a modules en el archivo config de webpack, es una herramienta propia de webpack

{
    test: /\.png/,
    type: "asset/resource",
},


/*----------------------Para optimizar las Fuentes con Webpack---------------------------------*/

Se descarga la fuente de Google Fonts en formato Woff
http://google-webfonts-helper.herokuapp.com/fonts/ubuntu?subsets=cyrillic,latin


/*-----------------------------------instalacion Preprocesador Stylus--------------------------*/

* npm install stylus stylus-loader -D

